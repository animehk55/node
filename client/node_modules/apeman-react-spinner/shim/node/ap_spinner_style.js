/**
 * Style for ApSpinner.
 * @class ApSpinnerStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApSpinnerStyle */
var ApSpinnerStyle = function (_Component) {
  _inherits(ApSpinnerStyle, _Component);

  function ApSpinnerStyle() {
    _classCallCheck(this, ApSpinnerStyle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApSpinnerStyle).apply(this, arguments));
  }

  _createClass(ApSpinnerStyle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;

      var _ApSpinnerStyle$style = ApSpinnerStyle.styleData(props);

      var all = _ApSpinnerStyle$style.all;
      var small = _ApSpinnerStyle$style.small;
      var medium = _ApSpinnerStyle$style.medium;
      var large = _ApSpinnerStyle$style.large;


      return _react2.default.createElement(
        _apemanReactStyle.ApStyle,
        { data: Object.assign(all, props.style),
          smallMediaData: small,
          mediumMediaData: medium,
          largeMediaData: large
        },
        props.children
      );
    }
  }]);

  return ApSpinnerStyle;
}(_react.Component);

Object.assign(ApSpinnerStyle, {
  propTypes: {
    type: _react.PropTypes.string,
    style: _react.PropTypes.object
  },
  defaultProps: {
    type: 'text/css',
    style: {}
  },
  styleData: function styleData(config) {
    return {
      all: {
        '.ap-spinner': {
          textAlign: 'center',
          display: 'none'
        },
        '.ap-spinner.ap-spinner-enabled': {
          display: 'inline-flex',
          justifyContent: 'center',
          alignItems: 'center',
          width: '100%',
          height: '100%'
        },
        '.ap-spinner-icon': {
          display: 'inline-block',
          margin: '0 4px',
          transition: 'opacity 100ms',
          opacity: 1
        },
        '.ap-spinner-cover': {
          position: 'absolute',
          left: 0,
          top: 0,
          right: 0,
          bottom: 0,
          zIndex: 4,
          justifyContent: 'center',
          alignItems: 'center',
          background: _apemanReactStyle.ApStyle.COVER_BACKGROUND,
          color: _apemanReactStyle.ApStyle.COVER_COLOR
        }
      },
      small: {},
      medium: {},
      large: {}
    };
  }
});

exports.default = ApSpinnerStyle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX3NwaW5uZXJfc3R5bGUuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUtBOzs7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTtJQUNNLGM7Ozs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTSxJQUFJLElBQVY7QUFEUSxVQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7QUFBQSxrQ0FJNEIsZUFBZSxTQUFmLENBQXlCLEtBQXpCLENBSjVCOztBQUFBLFVBSUYsR0FKRSx5QkFJRixHQUpFO0FBQUEsVUFJRyxLQUpILHlCQUlHLEtBSkg7QUFBQSxVQUlVLE1BSlYseUJBSVUsTUFKVjtBQUFBLFVBSWtCLEtBSmxCLHlCQUlrQixLQUpsQjs7O0FBTVIsYUFDRTtBQUFBO0FBQUEsVUFBUyxNQUFPLE9BQU8sTUFBUCxDQUFjLEdBQWQsRUFBbUIsTUFBTSxLQUF6QixDQUFoQjtBQUNTLDBCQUFpQixLQUQxQjtBQUVTLDJCQUFrQixNQUYzQjtBQUdTLDBCQUFpQjtBQUgxQjtBQUlHLGNBQU07QUFKVCxPQURGO0FBT0Q7Ozs7OztBQUdILE9BQU8sTUFBUCxDQUFjLGNBQWQsRUFBOEI7QUFDNUIsYUFBVztBQUNULFVBQU0saUJBQU0sTUFESDtBQUVULFdBQU8saUJBQU07QUFGSixHQURpQjtBQUs1QixnQkFBYztBQUNaLFVBQU0sVUFETTtBQUVaLFdBQU87QUFGSyxHQUxjO0FBUzVCLFdBVDRCLHFCQVNqQixNQVRpQixFQVNUO0FBQ2pCLFdBQU87QUFDTCxXQUFLO0FBQ0gsdUJBQWU7QUFDYixxQkFBVyxRQURFO0FBRWIsbUJBQVM7QUFGSSxTQURaO0FBS0gsMENBQWtDO0FBQ2hDLG1CQUFTLGFBRHVCO0FBRWhDLDBCQUFnQixRQUZnQjtBQUdoQyxzQkFBWSxRQUhvQjtBQUloQyxpQkFBTyxNQUp5QjtBQUtoQyxrQkFBUTtBQUx3QixTQUwvQjtBQVlILDRCQUFvQjtBQUNsQixtQkFBUyxjQURTO0FBRWxCLGtCQUFRLE9BRlU7QUFHbEIsc0JBQVksZUFITTtBQUlsQixtQkFBUztBQUpTLFNBWmpCO0FBa0JILDZCQUFxQjtBQUNuQixvQkFBVSxVQURTO0FBRW5CLGdCQUFNLENBRmE7QUFHbkIsZUFBSyxDQUhjO0FBSW5CLGlCQUFPLENBSlk7QUFLbkIsa0JBQVEsQ0FMVztBQU1uQixrQkFBUSxDQU5XO0FBT25CLDBCQUFnQixRQVBHO0FBUW5CLHNCQUFZLFFBUk87QUFTbkIsc0JBQVksMEJBQVEsZ0JBVEQ7QUFVbkIsaUJBQU8sMEJBQVE7QUFWSTtBQWxCbEIsT0FEQTtBQWdDTCxhQUFPLEVBaENGO0FBaUNMLGNBQVEsRUFqQ0g7QUFrQ0wsYUFBTztBQWxDRixLQUFQO0FBb0NEO0FBOUMyQixDQUE5Qjs7a0JBaURlLGMiLCJmaWxlIjoiYXBfc3Bpbm5lcl9zdHlsZS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTdHlsZSBmb3IgQXBTcGlubmVyLlxuICogQGNsYXNzIEFwU3Bpbm5lclN0eWxlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudCwgUHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7QXBTdHlsZX0gZnJvbSAnYXBlbWFuLXJlYWN0LXN0eWxlJ1xuXG4vKiogQGxlbmRzIEFwU3Bpbm5lclN0eWxlICovXG5jbGFzcyBBcFNwaW5uZXJTdHlsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgbGV0IHsgYWxsLCBzbWFsbCwgbWVkaXVtLCBsYXJnZSB9ID0gQXBTcGlubmVyU3R5bGUuc3R5bGVEYXRhKHByb3BzKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxBcFN0eWxlIGRhdGE9eyBPYmplY3QuYXNzaWduKGFsbCwgcHJvcHMuc3R5bGUpIH1cbiAgICAgICAgICAgICAgIHNtYWxsTWVkaWFEYXRhPXsgc21hbGwgfVxuICAgICAgICAgICAgICAgbWVkaXVtTWVkaWFEYXRhPXsgbWVkaXVtIH1cbiAgICAgICAgICAgICAgIGxhcmdlTWVkaWFEYXRhPXsgbGFyZ2UgfVxuICAgICAgPnsgcHJvcHMuY2hpbGRyZW4gfTwvQXBTdHlsZT5cbiAgICApXG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihBcFNwaW5uZXJTdHlsZSwge1xuICBwcm9wVHlwZXM6IHtcbiAgICB0eXBlOiB0eXBlcy5zdHJpbmcsXG4gICAgc3R5bGU6IHR5cGVzLm9iamVjdFxuICB9LFxuICBkZWZhdWx0UHJvcHM6IHtcbiAgICB0eXBlOiAndGV4dC9jc3MnLFxuICAgIHN0eWxlOiB7fVxuICB9LFxuICBzdHlsZURhdGEgKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICBhbGw6IHtcbiAgICAgICAgJy5hcC1zcGlubmVyJzoge1xuICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnXG4gICAgICAgIH0sXG4gICAgICAgICcuYXAtc3Bpbm5lci5hcC1zcGlubmVyLWVuYWJsZWQnOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDAlJ1xuICAgICAgICB9LFxuICAgICAgICAnLmFwLXNwaW5uZXItaWNvbic6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcbiAgICAgICAgICBtYXJnaW46ICcwIDRweCcsXG4gICAgICAgICAgdHJhbnNpdGlvbjogJ29wYWNpdHkgMTAwbXMnLFxuICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgfSxcbiAgICAgICAgJy5hcC1zcGlubmVyLWNvdmVyJzoge1xuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgIHJpZ2h0OiAwLFxuICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICB6SW5kZXg6IDQsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgIGJhY2tncm91bmQ6IEFwU3R5bGUuQ09WRVJfQkFDS0dST1VORCxcbiAgICAgICAgICBjb2xvcjogQXBTdHlsZS5DT1ZFUl9DT0xPUlxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc21hbGw6IHt9LFxuICAgICAgbWVkaXVtOiB7fSxcbiAgICAgIGxhcmdlOiB7fVxuICAgIH1cbiAgfVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBTcGlubmVyU3R5bGVcbiJdfQ==