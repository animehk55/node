/**
 * Dig object props
 * @function dig
 * @param {Object} src - Source object
 * @param {...string} keys - Keys to dig
 * @returns {*} - Values
 */
'use strict';

/** @lends dig */

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dig() {
  var src = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var value = src;

  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    keys[_key - 1] = arguments[_key];
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = (0, _getIterator3.default)(keys), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var key = _step.value;

      value = value[key];
      var finish = typeof value === 'undefined' || value === null;
      if (finish) {
        return value;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return value;
}

module.exports = dig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpZy5qcyJdLCJuYW1lcyI6WyJkaWciLCJzcmMiLCJ2YWx1ZSIsImtleXMiLCJrZXkiLCJmaW5pc2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU9BOztBQUVBOzs7Ozs7OztBQUNBLFNBQVNBLEdBQVQsR0FBaUM7QUFBQSxNQUFuQkMsR0FBbUIseURBQWIsRUFBYTs7QUFDL0IsTUFBSUMsUUFBUUQsR0FBWjs7QUFEK0Isb0NBQU5FLElBQU07QUFBTkEsUUFBTTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUUvQixvREFBZ0JBLElBQWhCLDRHQUFzQjtBQUFBLFVBQWJDLEdBQWE7O0FBQ3BCRixjQUFRQSxNQUFPRSxHQUFQLENBQVI7QUFDQSxVQUFJQyxTQUFVLE9BQU9ILEtBQVAsS0FBaUIsV0FBbEIsSUFBbUNBLFVBQVUsSUFBMUQ7QUFDQSxVQUFJRyxNQUFKLEVBQVk7QUFDVixlQUFPSCxLQUFQO0FBQ0Q7QUFDRjtBQVI4QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVMvQixTQUFPQSxLQUFQO0FBQ0Q7O0FBRURJLE9BQU9DLE9BQVAsR0FBaUJQLEdBQWpCIiwiZmlsZSI6ImRpZy5qcyIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERpZyBvYmplY3QgcHJvcHNcbiAqIEBmdW5jdGlvbiBkaWdcbiAqIEBwYXJhbSB7T2JqZWN0fSBzcmMgLSBTb3VyY2Ugb2JqZWN0XG4gKiBAcGFyYW0gey4uLnN0cmluZ30ga2V5cyAtIEtleXMgdG8gZGlnXG4gKiBAcmV0dXJucyB7Kn0gLSBWYWx1ZXNcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbi8qKiBAbGVuZHMgZGlnICovXG5mdW5jdGlvbiBkaWcgKHNyYyA9IHt9LCAuLi5rZXlzKSB7XG4gIGxldCB2YWx1ZSA9IHNyY1xuICBmb3IgKGxldCBrZXkgb2Yga2V5cykge1xuICAgIHZhbHVlID0gdmFsdWVbIGtleSBdXG4gICAgbGV0IGZpbmlzaCA9ICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB8fCAodmFsdWUgPT09IG51bGwpXG4gICAgaWYgKGZpbmlzaCkge1xuICAgICAgcmV0dXJuIHZhbHVlXG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRpZ1xuIl19