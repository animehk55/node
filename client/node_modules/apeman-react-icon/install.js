/**
 * Install icons
 * @function install
 * @param {string} dirname - Directory name to install files
 * @param {Object} [options]
 * @parma {boolean} [options.copy]
 * @returns {Promise}
 */
'use strict'

const co = require('co')
const path = require('path')
const filelink = require('filelink')
const filecopy = require('filecopy')
const aglob = require('aglob')
const { existsAsync, statAsync } = require('asfs')

const assetDir = `${__dirname}/asset`

const state = (filename) => co(function * () {
  return (yield existsAsync(filename)) && (yield statAsync(filename))
})

let doInstall = (srcDir, destDir, opitons = {}) => co(function * () {
  let filenames = yield aglob('*.*', { cwd: srcDir })
  for (let filename of filenames) {
    let src = `${srcDir}/${filename}`
    let dest = `${destDir}/${filename}`
    let worker = opitons && opitons.copy ? filecopy : filelink
    let before = yield state(dest)
    yield worker(src, dest, {
      force: true,
      mkdirp: true
    })
    let after = yield state(dest)
    let changed = (before && before.size) !== (after && after.size)
    if (changed) {
      console.log(`File installed: ${path.relative(process.cwd(), dest)}`)
    }
  }
})

/** @lends install */
function install (dirname, options = {}) {
  return co(function * () {
    yield doInstall(`${assetDir}/css`, `${dirname}/css`, options)
    yield doInstall(`${assetDir}/fonts`, `${dirname}/fonts`, options)
  })
}

module.exports = install
