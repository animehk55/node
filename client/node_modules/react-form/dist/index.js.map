{"version":3,"file":"index.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 67294e5eec9be3df6064","webpack:///external \"babel-runtime/helpers/classCallCheck\"","webpack:///external \"babel-runtime/helpers/createClass\"","webpack:///external \"react\"","webpack:///external \"babel-runtime/helpers/extends\"","webpack:///external \"babel-runtime/core-js/object/get-prototype-of\"","webpack:///external \"babel-runtime/helpers/possibleConstructorReturn\"","webpack:///external \"babel-runtime/helpers/inherits\"","webpack:///external \"babel-runtime/helpers/objectWithoutProperties\"","webpack:///src/components/FormField.js","webpack:///external \"prop-types\"","webpack:///src/redux/utils.js","webpack:///external \"babel-runtime/core-js/object/keys\"","webpack:///external \"babel-runtime/helpers/typeof\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/helpers/toConsumableArray\"","webpack:///external \"babel-runtime/core-js/json/stringify\"","webpack:///external \"babel-runtime/core-js/object/assign\"","webpack:///src/redux/actions.js","webpack:///src/index.js","webpack:///src/components/ReduxForm.js","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"redux-thunk\"","webpack:///external \"redux\"","webpack:///external \"react-redux\"","webpack:///external \"redux-logger\"","webpack:///src/redux/ReducerBuilder.js","webpack:///src/components/form-fields/Text.js","webpack:///src/components/DepricatedFormField.js","webpack:///src/components/form-fields/Radio.js","webpack:///src/components/form-fields/TextArea.js","webpack:///src/components/form-fields/Select.js","webpack:///src/components/form-fields/Checkbox.js","webpack:///src/components/form-fields/RadioGroup.js","webpack:///src/components/form-fields/NestedForm.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-form\"] = factory();\n\telse\n\t\troot[\"react-form\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 67294e5eec9be3df6064","module.exports = require(\"babel-runtime/helpers/classCallCheck\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/classCallCheck\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/createClass\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/createClass\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/extends\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/extends\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/get-prototype-of\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/possibleConstructorReturn\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/inherits\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/inherits\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/objectWithoutProperties\"\n// module id = 7\n// module chunks = 0","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Import PropTypes library\nimport PropTypes from 'prop-types';\n\nimport Utils from '../redux/utils';\n\nimport DepricatedFormField from './DepricatedFormField';\n\n/* ---------- Form Component ----------*/\n\nfunction FormField(FormComponent) {\n  class ConnectedFormField extends Component {\n    // We want to set touched to true when the form was submitted ( not for nested forms! )\n    componentWillReceiveProps(nextProps, nextContext) {\n      if ( nextContext.formApi.submitted !== this.context.formApi.submitted && !this.props.nestedForm ) {\n        this.context.formApi.setTouched( this.props.field, true, false );\n      }\n      if ( nextContext.formApi.submits !== this.context.formApi.submits && !this.props.nestedForm ) {\n        this.context.formApi.setTouched( this.props.field, true, false );\n      }\n    }\n\n    // Optimization to only rerender if nessisary\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n      // Grab needed values\n      const field = this.props.field;\n      const currentApi = this.context.formApi;\n      const nextApi = nextContext.formApi;\n\n      // Check child props for changes so we know to re-render\n      const nonChildrenProps = {\n        ...this.props,\n        children: null // do not compare children, that would be an anti-pattern\n      };\n      const nextNonChildrenProps = {\n        ...nextProps,\n        children: null\n      };\n\n      const shouldUpdate =\n        Utils.get( nextApi.values, field ) !== Utils.get( currentApi.values, field ) ||\n        Utils.get( nextApi.touched, field ) !== Utils.get( currentApi.touched, field ) ||\n        Utils.get( nextApi.errors, field ) !== Utils.get( currentApi.errors, field ) ||\n        Utils.get( nextApi.warnings, field ) !== Utils.get( currentApi.warnings, field ) ||\n        Utils.get( nextApi.successes, field ) !== Utils.get( currentApi.successes, field ) ||\n        !Utils.isShallowEqual(nextNonChildrenProps, nonChildrenProps) ||\n        nextContext.formApi.submits !== this.context.formApi.submits;\n\n      return shouldUpdate || false;\n    }\n\n    render() {\n\n      // console.log(\"RENDER FIELD\", this.props.field);\n\n      const {\n        formApi\n      } = this.context;\n\n      const { field, ...rest } = this.props;\n\n      // Build field api from form api\n      const fieldApi = {\n        setValue: ( value ) => {\n          formApi.setValue( field, value );\n        },\n        // format: ( format ) => {\n        //   formApi.format( field, format ); // TODO not supported yet WIP\n        // },\n        setTouched: ( touched ) => {\n          formApi.setTouched( field, touched );\n        },\n        setError: ( error ) => {\n          formApi.setError( field, error );\n        },\n        setWarning: ( warning ) => {\n          formApi.setWarning( field, warning );\n        },\n        setSuccess: ( success ) => {\n          formApi.setSuccess( field, success );\n        },\n        getValue: ( ) => formApi.getValue( field ),\n        getTouched: ( ) => formApi.getTouched( field ),\n        getError: ( ) => formApi.getError( field ),\n        getWarning: ( ) => formApi.getWarning( field ),\n        getSuccess: ( ) => formApi.getSuccess( field ),\n        validatingField: ( ) => formApi.validatingField( field ),\n        doneValidatingField: ( ) => formApi.doneValidatingField( field ),\n        reset: ( ) => formApi.reset( field ),\n        registerAsyncValidation: formApi.registerAsyncValidation,\n        submitted: formApi.submitted,\n        submits: formApi.submits\n      };\n      return <FormComponent fieldApi={fieldApi} {...rest} />;\n    }\n  }\n\n  ConnectedFormField.contextTypes = {\n    formApi: PropTypes.object\n  };\n\n  // Handle deprecated usage\n  if (typeof FormComponent === 'object') {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Using FormField directly as a component is deprecated. Please refer to the latest docs on new HOC usage.');\n    }\n    return (\n      <DepricatedFormField {...FormComponent} />\n    );\n  }\n\n  return ConnectedFormField;\n}\n\n\nexport default FormField;\n\n\n\n// WEBPACK FOOTER //\n// src/components/FormField.js","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 9\n// module chunks = 0","function isArray(a) {\n  return Array.isArray(a);\n}\n\nfunction isObject(a) {\n  return !Array.isArray(a) && typeof a === 'object' && a !== null;\n}\n\nfunction isStringValidNumber(str) {\n  return !isNaN(str);\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!isArray(arr)) {\n    newArr.push(arr);\n  } else {\n    for (let i = 0; i < arr.length; i++) {\n      flattenDeep(arr[i], newArr);\n    }\n  }\n  return newArr;\n}\n\nfunction makePathArray(obj) {\n  return flattenDeep(obj)\n    .join('.')\n    .replace('[', '.')\n    .replace(']', '')\n    .split('.');\n}\n\nfunction set(obj = {}, path, value) {\n  const keys = makePathArray(path);\n  let keyPart;\n\n  if (isStringValidNumber(keys[0]) && !isArray(obj)) {\n    obj = [];\n  }\n  if (!isStringValidNumber(keys[0]) && !isObject(obj)) {\n    obj = {};\n  }\n\n  let cursor = obj\n\n  while ((keyPart = keys.shift()) && keys.length) {\n    if (isStringValidNumber(keys[0]) && !isArray(cursor[keyPart])) {\n      cursor[keyPart] = [];\n    }\n    if (!isStringValidNumber(keys[0]) && !isObject(cursor[keyPart])) {\n      cursor[keyPart] = {};\n    }\n    cursor = cursor[keyPart];\n  }\n  cursor[keyPart] = value;\n  return obj;\n}\n\nfunction get(obj, path, def) {\n  if (!path) {\n    return obj;\n  }\n  const pathObj = makePathArray(path);\n  let val;\n  try {\n    val = pathObj.reduce((current, pathPart) => current[pathPart], obj);\n  } catch (e) {}\n  return typeof val !== 'undefined' ? val : def;\n}\n\nfunction isShallowEqual(obj1, obj2) {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  for (var prop in obj1) {\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default {\n  get,\n  set,\n  isObject,\n  isArray,\n  isShallowEqual\n};\n\n\n\n// WEBPACK FOOTER //\n// src/redux/utils.js","module.exports = require(\"babel-runtime/core-js/object/keys\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/keys\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/typeof\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/typeof\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"babel-runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/regenerator\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/asyncToGenerator\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"babel-runtime/helpers/toConsumableArray\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/helpers/toConsumableArray\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/json/stringify\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/json/stringify\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"babel-runtime/core-js/object/assign\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/object/assign\"\n// module id = 17\n// module chunks = 0","export const SET_VALUE = 'SET_VALUE';\nexport function setValue( field, value ) {\n  return { type: SET_VALUE, field, value };\n}\n\nexport const FORMAT = 'FORMAT';\nexport function format( field, fmt ) {\n  return { type: FORMAT, field, format: fmt };\n}\n\nexport const SET_ERROR = 'SET_ERROR';\nexport function setError( field, error ) {\n  return { type: SET_ERROR, field, error };\n}\n\nexport const SET_WARNING = 'SET_WARNING';\nexport function setWarning( field, warning ) {\n  return { type: SET_WARNING, field, warning };\n}\n\nexport const SET_SUCCESS = 'SET_SUCCESS';\nexport function setSuccess( field, success ) {\n  return { type: SET_SUCCESS, field, success };\n}\n\nexport const SET_ASYNC_ERROR = 'SET_ASYNC_ERROR';\nexport function setAsyncError( field, error ) {\n  return { type: SET_ASYNC_ERROR, field, error };\n}\n\nexport const SET_ASYNC_WARNING = 'SET_ASYNC_WARNING';\nexport function setAsyncWarning( field, warning ) {\n  return { type: SET_ASYNC_WARNING, field, warning };\n}\n\nexport const SET_ASYNC_SUCCESS = 'SET_ASYNC_SUCCESS';\nexport function setAsyncSuccess( field, success ) {\n  return { type: SET_ASYNC_SUCCESS, field, success };\n}\n\nexport const REMOVE_ASYNC_ERROR = 'REMOVE_ASYNC_ERROR';\nexport function removeAsyncError( field ) {\n  return { type: REMOVE_ASYNC_ERROR, field };\n}\n\nexport const REMOVE_ASYNC_WARNING = 'REMOVE_ASYNC_WARNING';\nexport function removeAsyncWarning( field ) {\n  return { type: REMOVE_ASYNC_WARNING, field };\n}\n\nexport const REMOVE_ASYNC_SUCCESS = 'REMOVE_ASYNC_SUCCESS';\nexport function removeAsyncSuccess( field ) {\n  return { type: REMOVE_ASYNC_SUCCESS, field };\n}\n\nexport const SET_TOUCHED = 'SET_TOUCHED';\nexport function setTouched( field, touched ) {\n  return { type: SET_TOUCHED, field, touched };\n}\n\nexport const RESET = 'RESET';\nexport function reset( field ) {\n  return { type: RESET, field };\n}\n\nexport const RESET_ALL = 'RESET_ALL';\nexport function resetAll() {\n  return { type: RESET_ALL };\n}\n\nexport const PRE_VALIDATE = 'PRE_VALIDATE';\nexport function preValidate() {\n  return { type: PRE_VALIDATE };\n}\n\nexport const VALIDATE = 'VALIDATE';\nexport function validate() {\n  return { type: VALIDATE };\n}\n\nexport const SUBMIT = 'SUBMIT';\nexport function submit() {\n  return { type: SUBMIT };\n}\n\nexport const SUBMITTED = 'SUBMITTED';\nexport function submitted() {\n  return { type: SUBMITTED };\n}\n\nexport const SUBMITS = 'SUBMITS';\nexport function submits() {\n  return { type: SUBMITS };\n}\n\nexport const VALIDATING_FIELD = 'VALIDATING_FIELD';\nexport function validatingField( field ) {\n  return { type: VALIDATING_FIELD, field };\n}\n\nexport const DONE_VALIDATING_FIELD = 'DONE_VALIDATING_FIELD';\nexport function doneValidatingField( field ) {\n  return { type: DONE_VALIDATING_FIELD, field };\n}\n\nexport const VALIDATION_FAILURE = 'VALIDATION_FAILURE';\nexport function validationFailure( field, error ) {\n  return { type: VALIDATION_FAILURE, field, error };\n}\n\nexport const VALIDATION_SUCCESS = 'VALIDATION_SUCCESS';\nexport function validationSuccess( field ) {\n  return { type: VALIDATION_SUCCESS, field };\n}\n\nexport function asyncValidate( field, validators = () => { return {}; } ) {\n  return async (dispatch, getState) => {\n    // Field could be array, if so we pull of the first param\n    const fld = Array.isArray(field) ? field[0] : field\n    // Only validate if there exists an async validator for this field\n    if ( validators[fld] ) {\n      // We are validating the specified field\n      dispatch( validatingField( field ) );\n      try {\n        // Call the asyncrounous validation function\n        const result = await validators[fld](getState().values[fld]);\n        // TODO null check on result??? Should we make the user return object\n        // Dispatch the setters for error, success and warning if they exsit on object\n        if ( result.hasOwnProperty('error') ) {\n          dispatch(setAsyncError(field, result.error));\n        }\n        if ( result.hasOwnProperty('warning') ) {\n          dispatch(setAsyncWarning(field, result.warning));\n        }\n        if ( result.hasOwnProperty('success') ) {\n          dispatch(setAsyncSuccess(field, result.success));\n        }\n        // We successfully validated so dispatch\n        dispatch(validationSuccess(field));\n      } catch ( e ) {\n        dispatch(validationFailure(field, e));\n      }\n      dispatch( doneValidatingField( field ) );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// src/redux/actions.js","/* ---------- imports ---------- */\n\nimport Form from './components/ReduxForm';\nimport Text from './components/form-fields/Text';\nimport Radio from './components/form-fields/Radio';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\nimport NestedForm from './components/form-fields/NestedForm';\nimport FormField from './components/FormField';\n\n/* ---------- exports ---------- */\n\nexport {\n  Form,\n  Text,\n  NestedForm,\n  FormField,\n  RadioGroup,\n  Radio,\n  Select,\n  Checkbox,\n  TextArea\n};\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Import PropTypes library\nimport PropTypes from 'prop-types';\n\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { connect } from 'react-redux';\nimport { createLogger } from 'redux-logger';\n\nimport ReducerBuilder from '../redux/ReducerBuilder';\nimport * as actions from '../redux/actions';\n\nimport Utils from '../redux/utils';\n\n/* ----- Recursive Check to see if form is valid  -----*/\n\n// TODO maybe a better way to do this\nconst isFormValid = (errors) => {\n  if ( Array.isArray( errors ) ) {\n    return errors.some( k => isFormValid( k ) );\n  }\n  else if ( errors !== null && typeof errors === 'object') {\n    return Object.keys(errors).some( k => isFormValid( errors[k] ) );\n  }\n  return errors;\n};\n\n/* ---------- Helper Methods ----------*/\nconst newErrors = (state) => {\n  return Object.assign(state.errors, state.asyncErrors);\n};\n\nconst newWarnings = (state) => {\n  return Object.assign(state.warnings, state.asyncWarnings);\n};\n\nconst newSuccesses = (state) => {\n  return Object.assign(state.successes, state.asyncSuccesses);\n};\n\nconst newState = ( state ) => {\n  return Object.assign( JSON.parse( JSON.stringify( state ) ), {\n    errors: newErrors(state),\n    warnings: newWarnings(state),\n    successes: newSuccesses(state)\n  });\n};\n\n/* ---------- Form Component ----------*/\n\nclass Form extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.getValue = this.getValue.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.addValue = this.addValue.bind(this);\n    this.removeValue = this.removeValue.bind(this);\n    this.getTouched = this.getTouched.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.setError = this.setError.bind(this);\n    this.format = this.format.bind(this);\n    this.setWarning = this.setWarning.bind(this);\n    this.setSuccess = this.setSuccess.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.reset = this.reset.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.getError = this.getError.bind(this);\n    this.getWarning = this.getWarning.bind(this);\n    this.getSuccess = this.getSuccess.bind(this);\n    this.doneValidatingField = this.doneValidatingField.bind(this);\n    this.validatingField = this.validatingField.bind(this);\n    this.registerAsyncValidation = this.registerAsyncValidation.bind(this);\n    this.callAsynchronousValidators = this.callAsynchronousValidators.bind(this);\n\n    this.asyncValidators = [];\n  }\n\n  getChildContext() {\n    return {\n      formApi: this.api\n    };\n  }\n\n  componentDidMount() {\n    if ( !this.props.dontValidateOnMount ) {\n      // PreValidat\n      this.props.dispatch(actions.preValidate());\n      // Validate\n      this.props.dispatch(actions.validate());\n    }\n    // Register async validators if you are a nested form ( only nested forms have registerAsync prop )\n    if ( this.props.registerAsyncValidation ) {\n      this.props.registerAsyncValidation( this.callAsynchronousValidators );\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // If submits was incrimented\n    if ( nextProps.submits > this.props.submits ) {\n      // PreValidate\n      this.props.dispatch(actions.preValidate());\n      // Validate\n      this.props.dispatch(actions.validate());\n      // Inciment submit\n      this.props.dispatch(actions.submits());\n    }\n    const didUpdate = JSON.stringify( nextProps.formState ) !== JSON.stringify( this.props.formState );\n    // Call form did update\n    if ( this.props.formDidUpdate && didUpdate ) {\n      this.props.formDidUpdate( newState( nextProps.formState ) );\n    }\n    // Call update function if it exists\n    if ( this.props.update && didUpdate ) {\n      this.props.update( newState( nextProps.formState ) );\n    }\n  }\n\n  componentWillUnmount() {\n    // Reset the form if it has reset\n    if ( this.props.reset ) {\n      // Basically calling parent forms reset function\n      this.props.reset();\n    }\n  }\n\n  get api() {\n    return {\n      values: this.props.formState.values,\n      errors: this.errors,\n      warnings: this.warnings,\n      successes: this.successes,\n      touched: this.props.formState.touched,\n      asyncValidations: this.props.formState.asyncValidations,\n      validating: this.props.formState.validating,\n      validationFailures: this.props.formState.validationFailures,\n      validationFailed: this.props.formState.validationFailed,\n      submitForm: this.submitForm,\n      setValue: this.setValue,\n      getValue: this.getValue,\n      setTouched: this.setTouched,\n      getTouched: this.getTouched,\n      getWarning: this.getWarning,\n      getError: this.getError,\n      getSuccess: this.getSuccess,\n      setError: this.setError,\n      setWarning: this.setWarning,\n      setSuccess: this.setSuccess,\n      format: this.format,\n      submitted: this.props.formState.submitted,\n      submits: this.props.formState.submits,\n      reset: this.reset,\n      resetAll: this.resetAll,\n      validatingField: this.validatingField,\n      doneValidatingField: this.doneValidatingField,\n      registerAsyncValidation: this.registerAsyncValidation,\n      addValue: this.addValue,\n      removeValue: this.removeValue\n    };\n  }\n\n  get errors() {\n    return Object.assign(this.props.formState.errors, this.props.formState.asyncErrors);\n  }\n\n  get warnings() {\n    return Object.assign(this.props.formState.warnings, this.props.formState.asyncWarnings);\n  }\n\n  get successes() {\n    return Object.assign(this.props.formState.successes, this.props.formState.asyncSuccesses);\n  }\n\n  get currentState() {\n    return Object.assign( JSON.parse( JSON.stringify( this.props.formState ) ), {\n      errors: this.errors,\n      warnings: this.warnings,\n      successes: this.successes\n    });\n  }\n\n  setValue( field, value ) {\n    console.log(\"SETTING VAL\", field, value );\n    this.props.dispatch(actions.setValue(field, value));\n    this.props.dispatch(actions.removeAsyncError(field));\n    this.props.dispatch(actions.removeAsyncWarning(field));\n    this.props.dispatch(actions.removeAsyncSuccess(field));\n    this.props.dispatch(actions.preValidate());\n    this.props.dispatch(actions.validate());\n  }\n\n  setTouched( field, touch = true, validate = true ) {\n    this.props.dispatch(actions.setTouched(field, touch));\n    // We have a flag to perform async validate when touched\n    if ( validate ) {\n      this.props.dispatch(actions.asyncValidate(field, this.props.asyncValidators ));\n    }\n  }\n\n  setError( field, error ) {\n    this.props.dispatch(actions.setError(field, error));\n  }\n\n  setWarning( field, warning ) {\n    this.props.dispatch(actions.setWarning(field, warning));\n  }\n\n  setSuccess( field, success ) {\n    this.props.dispatch(actions.setSuccess(field, success));\n  }\n\n  getTouched( field ) {\n    if ( Array.isArray(field) ) {\n      return this.props.formState.touched[field[0]] ? this.props.formState.touched[field[0]][field[1]] : undefined;\n    }\n    return this.props.formState.touched[field];\n  }\n\n  getValue( field ) {\n    return Utils.get( this.props.formState.values, field );\n  }\n\n  getError( field ) {\n    return Utils.get( this.errors, field );\n  }\n\n  getWarning( field ) {\n    return Utils.get( this.warnings, field );\n  }\n\n  getSuccess( field ) {\n    return Utils.get( this.successes, field );\n  }\n\n  addValue( field, value ) {\n    this.props.dispatch(actions.setValue(field, [\n      ...( Utils.get( this.props.formState.values, field ) || []),\n      value,\n    ]));\n    this.props.dispatch(actions.removeAsyncError(field));\n    this.props.dispatch(actions.removeAsyncWarning(field));\n    this.props.dispatch(actions.removeAsyncSuccess(field));\n    this.props.dispatch(actions.preValidate());\n    this.props.dispatch(actions.validate());\n  }\n\n  removeValue( field, index ) {\n    const fieldValue = Utils.get( this.props.formState.values, field ) || [];\n    this.props.dispatch(actions.setValue( field, [\n      ...fieldValue.slice(0, index),\n      ...fieldValue.slice(index + 1)\n    ]));\n    const fieldTouched = Utils.get( this.props.formState.touched, field ) || [];\n    this.props.dispatch(actions.setTouched( field, [\n      ...fieldTouched.slice(0, index),\n      ...fieldTouched.slice(index + 1)\n    ]));\n    this.props.dispatch(actions.removeAsyncError(field));\n    this.props.dispatch(actions.removeAsyncWarning(field));\n    this.props.dispatch(actions.removeAsyncSuccess(field));\n    this.props.dispatch(actions.preValidate());\n    this.props.dispatch(actions.validate());\n  }\n\n  registerAsyncValidation( func ) {\n    this.asyncValidators.push( func );\n  }\n\n  format( field, format ) {\n    this.props.dispatch(actions.format(field, format));\n    this.props.dispatch(actions.preValidate());\n    this.props.dispatch(actions.validate());\n  }\n\n  reset( field ) {\n    this.props.dispatch(actions.reset(field));\n  }\n\n  resetAll() {\n    this.props.dispatch(actions.resetAll());\n  }\n\n  // This is an internal method used by nested forms to tell the parent that its validating\n  validatingField( field ) {\n    this.props.dispatch(actions.validatingField(field));\n  }\n\n  // This is an internal method used by nested forms to tell the parent that its done validating\n  doneValidatingField( field ) {\n    this.props.dispatch(actions.doneValidatingField(field));\n  }\n\n  submitForm( e ) {\n    // PreValidate\n    this.props.dispatch(actions.preValidate());\n    // Validate\n    this.props.dispatch(actions.validate());\n    // update submits\n    this.props.dispatch(actions.submits());\n    // We prevent default, by default, unless override is passed\n    if ( e && e.preventDefault && !this.props.dontPreventDefault ) {\n      e.preventDefault(e);\n    }\n    // We need to prevent default if override is passed and form is invalid\n    if ( this.props.dontPreventDefault ) {\n      const invalid = isFormValid( this.errors );\n      if ( invalid && e && e.preventDefault ) {\n        e.preventDefault(e);\n      }\n    }\n    this.finishSubmission();\n  }\n\n  async finishSubmission(e) {\n    // Call asynchronous validators\n    await this.callAsynchronousValidators();\n    // Only submit if we have no errors\n    const errors = this.errors;\n    const invalid = isFormValid( errors );\n    // Only update submitted if we are not invalid and there are no active asynchronous validations\n    if ( !invalid && this.props.formState.asyncValidations === 0 ) {\n      // Update submitted\n      this.props.dispatch(actions.submitted());\n      if ( this.props.onSubmit ) {\n        this.props.onSubmit( this.props.formState.values, e );\n      }\n    }\n  }\n\n  async callAsynchronousValidators() {\n    // Build up list of async functions that need to be called\n    let validators = this.props.asyncValidators ? Object.keys(this.props.asyncValidators).map( ( field ) => {\n      return this.props.dispatch(actions.asyncValidate(field, this.props.asyncValidators ));\n    }) : [];\n    const childValidators = this.asyncValidators ? this.asyncValidators.map( ( validator ) => {\n      // This looks strange but you call an async function to generate a promise\n      return validator();\n    }) : [];\n    // Add all other subscribed validators to the validators list\n    validators = validators.concat(childValidators);\n    // Call all async validators\n    await Promise.all( validators );\n  }\n\n  render() {\n\n    const {\n      children,\n      component,\n      render\n    } = this.props;\n\n    if ( component ) {\n      return React.createElement(component, { formApi: this.api } );\n    }\n\n    if ( render ) {\n      return render(this.api);\n    }\n\n    if ( typeof children === 'function' ) {\n      return children(this.api);\n    }\n\n    return React.cloneElement(children, { formApi: this.api } );\n\n  }\n\n}\n\nForm.childContextTypes = {\n  formApi: PropTypes.object\n};\n\n/* ---------- Container ---------- */\n\nconst mapStateToProps = state => ({\n  formState: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch\n});\n\nconst FormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);\n\n/* ---------- Exports ---------- */\nclass ReduxForm extends Component {\n\n  constructor(props) {\n    super(props);\n    const {\n      validateError,\n      validateWarning,\n      validateSuccess,\n      preValidate,\n      defaultValues\n    } = props;\n\n    this.store = createStore(\n      ReducerBuilder.build( { validateError, validateWarning, validateSuccess, preValidate, defaultValues } ),\n      applyMiddleware(\n        thunkMiddleware, // lets us dispatch() functions\n        // createLogger() // neat middleware that logs actions\n      )\n    );\n  }\n\n  render() {\n\n    const {\n      children,\n      ...rest\n    } = this.props;\n\n    return (\n      <FormContainer store={this.store} {...rest}>\n        {children}\n      </FormContainer>\n    );\n  }\n}\n\n\nexport default ReduxForm;\n\n\n\n// WEBPACK FOOTER //\n// src/components/ReduxForm.js","module.exports = require(\"babel-runtime/core-js/promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-runtime/core-js/promise\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 25\n// module chunks = 0","module.exports = require(\"redux-logger\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-logger\"\n// module id = 26\n// module chunks = 0","import {\n  SET_VALUE,\n  SET_ERROR,\n  SET_WARNING,\n  SET_SUCCESS,\n  SET_TOUCHED,\n  PRE_VALIDATE,\n  VALIDATE,\n  FORMAT,\n  SUBMITS,\n  SUBMITTED,\n  RESET,\n  RESET_ALL,\n  VALIDATING_FIELD,\n  DONE_VALIDATING_FIELD,\n  VALIDATION_FAILURE,\n  VALIDATION_SUCCESS,\n  SET_ASYNC_ERROR,\n  SET_ASYNC_WARNING,\n  SET_ASYNC_SUCCESS,\n  REMOVE_ASYNC_ERROR,\n  REMOVE_ASYNC_WARNING,\n  REMOVE_ASYNC_SUCCESS\n} from './actions';\n\nimport Utils from './utils';\n\nconst INITIAL_STATE = {\n  values: {},\n  touched: {},\n  errors: {},\n  warnings: {},\n  successes: {},\n  asyncErrors: {},\n  asyncWarnings: {},\n  asyncSuccesses: {},\n  validating: {},\n  validationFailed: {},\n  validationFailures: 0,\n  asyncValidations: 0,\n  submitted: false,\n  submits: 0\n};\n\nconst setValue = ( state, action ) => {\n\n  const {\n    field,\n    value\n  } = action;\n\n  let newValues = JSON.parse(JSON.stringify(state.values));\n\n  newValues = Utils.set( newValues, field, value );\n\n  return {\n    ...state,\n    values: newValues\n  };\n\n};\n\nconst format = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  let newValues = JSON.parse(JSON.stringify(state.values));\n\n  newValues = Utils.set( newValues, field, action.format( Utils.get( newValues, field ) ) );\n\n  return {\n    ...state,\n    values: newValues\n  };\n\n};\n\nconst setTouched = ( state, action ) => {\n\n  const {\n    field,\n    touched\n  } = action;\n\n  let newTouched = JSON.parse(JSON.stringify(state.touched));\n\n  newTouched = Utils.set( newTouched, field, touched );\n\n  return {\n    ...state,\n    touched: newTouched\n  };\n\n};\n\nconst setWarning = ( state, action ) => {\n\n  const {\n    field,\n    warning\n  } = action;\n\n  let newWarnings = JSON.parse(JSON.stringify(state.warnings));\n\n  newWarnings = Utils.set( newWarnings, field, warning );\n\n  return {\n    ...state,\n    warnings: newWarnings\n  };\n\n};\n\nconst setError = ( state, action ) => {\n\n  const {\n    field,\n    error\n  } = action;\n\n  let newErrors = JSON.parse(JSON.stringify(state.errors));\n\n  newErrors = Utils.set( newErrors, field, error );\n\n  return {\n    ...state,\n    errors: newErrors\n  };\n\n};\n\nconst setSuccess = ( state, action ) => {\n\n  const {\n    field,\n    success\n  } = action;\n\n  let newSuccesses = JSON.parse(JSON.stringify(state.successes));\n\n  newSuccesses = Utils.set( newSuccesses, field, success );\n\n  return {\n    ...state,\n    successes: newSuccesses\n  };\n\n};\n\n\nconst setAsyncWarning = ( state, action ) => {\n\n  const {\n    field,\n    warning\n  } = action;\n\n  const newWarnings = JSON.parse(JSON.stringify(state.asyncWarnings));\n\n  if ( Array.isArray(field) ) {\n    newWarnings[field[0]] = warning;\n  }\n  else {\n    newWarnings[field] = warning;\n  }\n\n  return {\n    ...state,\n    asyncWarnings: newWarnings\n  };\n\n};\n\nconst setAsyncError = ( state, action ) => {\n\n  const {\n    field,\n    error\n  } = action;\n\n  const newErrors = JSON.parse(JSON.stringify(state.asyncErrors));\n\n  if ( Array.isArray(field) ) {\n    newErrors[field[0]] = error;\n  }\n  else {\n    newErrors[field] = error;\n  }\n\n  return {\n    ...state,\n    asyncErrors: newErrors\n  };\n\n};\n\nconst setAsyncSuccess = ( state, action ) => {\n\n  const {\n    field,\n    success\n  } = action;\n\n  const newSuccesses = JSON.parse(JSON.stringify(state.asyncSuccesses));\n\n  if ( Array.isArray(field) ) {\n    newSuccesses[field[0]] = success;\n  }\n  else {\n    newSuccesses[field] = success;\n  }\n\n  return {\n    ...state,\n    asyncSuccesses: newSuccesses\n  };\n\n};\n\nconst removeAsyncWarning = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const newWarnings = JSON.parse(JSON.stringify(state.asyncWarnings));\n\n  if ( Array.isArray(field) ) {\n    delete newWarnings[field[0]];\n  }\n  else {\n    delete newWarnings[field];\n  }\n\n  return {\n    ...state,\n    asyncWarnings: newWarnings\n  };\n\n};\n\nconst removeAsyncError = ( state, action ) => {\n\n  const {\n    field,\n  } = action;\n\n  const newErrors = JSON.parse(JSON.stringify(state.asyncErrors));\n\n  if ( Array.isArray(field) ) {\n    delete newErrors[field[0]];\n  }\n  else {\n    delete newErrors[field];\n  }\n\n  return {\n    ...state,\n    asyncErrors: newErrors\n  };\n\n};\n\nconst removeAsyncSuccess = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const newSuccesses = JSON.parse(JSON.stringify(state.asyncSuccesses));\n\n  if ( Array.isArray(field) ) {\n    delete newSuccesses[field[0]];\n  }\n  else {\n    delete newSuccesses[field];\n  }\n\n  return {\n    ...state,\n    asyncSuccesses: newSuccesses\n  };\n\n};\n\nconst validate = ( state, action, validateError, validateWarning, validateSuccess ) => {\n\n  let errors = validateError ? validateError( state.values ) : {};\n  let warnings = validateWarning ? validateWarning( state.values ) : {};\n  let successes = validateSuccess ? validateSuccess( state.values, errors ) : {};\n  errors = { ...state.errors, ...errors };\n  warnings = { ...state.warnings, ...warnings };\n  successes = { ...state.successes, ...successes };\n  return {\n    ...state,\n    errors,\n    warnings,\n    successes\n  };\n};\n\nconst preValidate = ( state, action, preValidator ) => {\n\n  const values = preValidator ? preValidator( JSON.parse( JSON.stringify( state.values) ) ) : state.values;\n\n  return {\n    ...state,\n    values\n  };\n};\n\nconst submits = ( state ) => {\n  return {\n    ...state,\n    submits: state.submits + 1,\n  };\n};\n\nconst submitted = ( state ) => {\n  return {\n    ...state,\n    submitted: true,\n  };\n};\n\nconst reset = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const newState = JSON.parse( JSON.stringify( state ) );\n  newState.values[field] = null;\n  newState.touched[field] = null;\n  newState.errors[field] = null;\n  newState.warnings[field] = null;\n  newState.successes[field] = null;\n  newState.asyncErrors[field] = null;\n  newState.asyncWarnings[field] = null;\n  newState.asyncSuccesses[field] = null;\n\n  return {\n    ...state,\n    ...newState\n  };\n};\n\nconst validatingField = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const validating = JSON.parse(JSON.stringify(state.validating));\n\n  let asyncValidations = state.asyncValidations;\n\n  if ( Array.isArray(field) ) {\n    // Only incriment validations if this field is going from falsey to true\n    asyncValidations = !validating[field[0]] ? asyncValidations + 1 : asyncValidations;\n    validating[field[0]] = true;\n  }\n  else {\n    // Only incriment validations if this field is going from falsey to true\n    asyncValidations = !validating[field] ? asyncValidations + 1 : asyncValidations;\n    validating[field] = true;\n  }\n\n  return {\n    ...state,\n    asyncValidations,\n    validating\n  };\n\n};\n\nconst doneValidatingField = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const validating = JSON.parse(JSON.stringify(state.validating));\n\n  let asyncValidations = state.asyncValidations;\n\n  if ( Array.isArray(field) ) {\n    // Only deccriment validations if this field is going from true to false\n    asyncValidations = validating[field[0]] ? asyncValidations - 1 : asyncValidations;\n    validating[field[0]] = false;\n  }\n  else {\n    // Only deccriment validations if this field is going from true to false\n    asyncValidations = validating[field] ? asyncValidations - 1 : asyncValidations;\n    validating[field] = false;\n  }\n\n  return {\n    ...state,\n    asyncValidations,\n    validating\n  };\n\n};\n\nconst validationFailure = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  const validationFailed = JSON.parse(JSON.stringify(state.validationFailed));\n\n  let validationFailures = state.validationFailures;\n\n  if ( Array.isArray(field) ) {\n    // Only incriment faulures if this field is going from false to true\n    validationFailures = validationFailed[field[0]] === false ? validationFailures + 1 : validationFailures;\n    validationFailed[field[0]] = true;\n  }\n  else {\n    // Only incriment faulures if this field is going from falsey to true\n    validationFailures = !validationFailed[field] ? validationFailures + 1 : validationFailures;\n    validationFailed[field] = true;\n  }\n\n  return {\n    ...state,\n    validationFailures,\n    validationFailed\n  };\n\n};\n\nconst validationSuccess = ( state, action ) => {\n\n  const {\n    field\n  } = action;\n\n  let validationFailures = state.validationFailures;\n\n  const validationFailed = JSON.parse(JSON.stringify(state.validationFailed));\n\n  if ( Array.isArray(field) ) {\n    // Only devcriment faulures if this field is going from true to false\n    validationFailures = validationFailed[field[0]] === true ? validationFailures - 1 : validationFailures;\n    validationFailed[field[0]] = false;\n  }\n  else {\n    // Only devcriment faulures if this field is going from true to false\n    validationFailures = validationFailed[field] === true ? validationFailures - 1 : validationFailures;\n    validationFailed[field] = false;\n  }\n\n  return {\n    ...state,\n    validationFailures,\n    validationFailed\n  };\n\n};\n\nclass ReducerBuilder {\n\n  static build( properties = {} ) {\n\n    const {\n      validateError,\n      validateWarning,\n      validateSuccess,\n      defaultValues\n    } = properties;\n\n    const COMBINED_INITIAL_STATE = Object.assign({}, INITIAL_STATE, {\n      values: defaultValues || {}\n    });\n\n    const reducer = (state = COMBINED_INITIAL_STATE, action) => {\n      switch ( action.type ) {\n        case SET_VALUE:\n          return setValue( state, action );\n        case FORMAT:\n          return format( state, action );\n        case SET_ERROR:\n          return setError( state, action );\n        case SET_WARNING:\n          return setWarning( state, action );\n        case SET_SUCCESS:\n          return setSuccess( state, action );\n        case SET_ASYNC_ERROR:\n          return setAsyncError( state, action );\n        case SET_ASYNC_WARNING:\n          return setAsyncWarning( state, action );\n        case SET_ASYNC_SUCCESS:\n          return setAsyncSuccess( state, action );\n        case SET_TOUCHED:\n          return setTouched( state, action );\n        case REMOVE_ASYNC_ERROR:\n          return removeAsyncError( state, action );\n        case REMOVE_ASYNC_WARNING:\n          return removeAsyncWarning( state, action );\n        case REMOVE_ASYNC_SUCCESS:\n          return removeAsyncSuccess( state, action );\n        case PRE_VALIDATE:\n          return preValidate( state, action, properties.preValidate );\n        case VALIDATE:\n          return validate( state, action, validateError, validateWarning, validateSuccess );\n        case SUBMITTED:\n          return submitted( state, action );\n        case SUBMITS:\n          return submits( state, action );\n        case RESET:\n          return reset( state, action );\n        case RESET_ALL:\n          return INITIAL_STATE;\n        case VALIDATION_FAILURE:\n          return validationFailure( state, action );\n        case VALIDATION_SUCCESS:\n          return validationSuccess( state, action );\n        case DONE_VALIDATING_FIELD:\n          return doneValidatingField( state, action );\n        case VALIDATING_FIELD:\n          return validatingField( state, action );\n        default:\n          return state;\n      }\n    };\n\n    return reducer;\n\n  }\n\n}\n\nexport default ReducerBuilder;\n\n\n\n// WEBPACK FOOTER //\n// src/redux/ReducerBuilder.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nclass TextWrapper extends Component {\n  render() {\n    // console.log('RENDER');\n\n    const { fieldApi, onChange, onBlur, ...rest } = this.props;\n\n    const { getValue, setValue, setTouched } = fieldApi;\n\n    return (\n      <input\n        {...rest}\n        value={getValue() || ''}\n        onChange={(e) => {\n          setValue(e.target.value);\n          if (onChange) {\n            onChange(e.target.value, e);\n          }\n        }}\n        onBlur={(e) => {\n          setTouched();\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}\n      />\n    );\n  }\n}\n\nconst Text = FormField(TextWrapper);\n\nexport default Text;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/Text.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Import PropTypes library\nimport PropTypes from 'prop-types';\n\nimport Utils from '../redux/utils';\n\n/* ---------- Form Component ----------*/\n\nclass DepricatedFormField extends Component {\n\n  // We want to set touched to true when the form was submitted ( not for nested forms! )\n  componentWillReceiveProps(nextProps, nextContext) {\n    if ( nextContext.formApi.submitted !== this.context.formApi.submitted && !this.props.nestedForm ) {\n      this.context.formApi.setTouched( this.props.field, true, false );\n    }\n    if ( nextContext.formApi.submits !== this.context.formApi.submits && !this.props.nestedForm ) {\n      this.context.formApi.setTouched( this.props.field, true, false );\n    }\n  }\n\n  // Optimization to only rerender if nessisary\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n    // Grab needed values\n    const field = this.props.field;\n    const currentApi = this.context.formApi;\n    const nextApi = nextContext.formApi;\n\n    // Check child props for changes so we know to re-render\n    const childProps = { ...this.props.children.props };\n    const nextChildProps = { ...nextProps.children.props };\n\n    // Remove children so we can do shallow compare\n    childProps.children = null;\n    nextChildProps.children = null;\n\n    const shouldUpdate =\n      Utils.get( nextApi.values, field ) !== Utils.get( currentApi.values, field ) ||\n      Utils.get( nextApi.touched, field ) !== Utils.get( currentApi.touched, field ) ||\n      Utils.get( nextApi.errors, field ) !== Utils.get( currentApi.errors, field ) ||\n      Utils.get( nextApi.warnings, field ) !== Utils.get( currentApi.warnings, field ) ||\n      Utils.get( nextApi.successes, field ) !== Utils.get( currentApi.successes, field ) ||\n      !Utils.isShallowEqual( nextChildProps, childProps ) ||\n      //JSON.stringify(nextChildProps) !== JSON.stringify(childProps) ||\n      nextContext.formApi.submits !== this.context.formApi.submits;\n\n    return shouldUpdate || false;\n  }\n\n  render() {\n\n    // console.log(\"RENDER FIELD\", this.props.field);\n\n    const {\n      formApi\n    } = this.context;\n\n    const {\n      children,\n      field\n    } = this.props;\n\n    // Build field api from form api\n    const fieldApi = {\n      setValue: ( value ) => {\n        formApi.setValue( field, value );\n      },\n      // format: ( format ) => {\n      //   formApi.format( field, format ); // TODO not supported yet WIP\n      // },\n      setTouched: ( touched ) => {\n        formApi.setTouched( field, touched );\n      },\n      setError: ( error ) => {\n        formApi.setError( field, error );\n      },\n      setWarning: ( warning ) => {\n        formApi.setWarning( field, warning );\n      },\n      setSuccess: ( success ) => {\n        formApi.setSuccess( field, success );\n      },\n      getValue: ( ) => formApi.getValue( field ),\n      getTouched: ( ) => formApi.getTouched( field ),\n      getError: ( ) => formApi.getError( field ),\n      getWarning: ( ) => formApi.getWarning( field ),\n      getSuccess: ( ) => formApi.getSuccess( field ),\n      validatingField: ( ) => formApi.validatingField( field ),\n      doneValidatingField: ( ) => formApi.doneValidatingField( field ),\n      reset: ( ) => formApi.reset( field ),\n      registerAsyncValidation: formApi.registerAsyncValidation,\n      submitted: formApi.submitted,\n      submits: formApi.submits\n    };\n\n    return React.cloneElement(children, { fieldApi } );\n\n  }\n\n}\n\nDepricatedFormField.contextTypes = {\n  formApi: PropTypes.object\n};\n\nexport default DepricatedFormField;\n\n\n\n// WEBPACK FOOTER //\n// src/components/DepricatedFormField.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Import PropTypes library\nimport PropTypes from 'prop-types';\n\nclass Radio extends Component {\n\n  // console.log('RENDER');\n\n  render() {\n\n    const {\n      onClick,\n      group,\n      value,\n      ...rest\n    } = this.props;\n\n    return (\n      <input\n        {...rest}\n        checked={group.getValue() === value}\n        onChange={(e) => {\n          if (!e.target.checked) {\n            return;\n          }\n          group.setValue(value);\n          group.onChange(value, e);\n          if (onClick) {\n            onClick(e);\n          }\n        }}\n        onBlur={(e) => {\n          group.setTouched();\n          group.onBlur(e);\n        }}\n        type=\"radio\"\n      />\n    );\n\n  }\n\n}\n\nRadio.propTypes = {\n  value: PropTypes.string.isRequired,\n  group: PropTypes.object.isRequired\n};\n\nexport default Radio;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/Radio.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nclass TextAreaWrapper extends Component {\n\n  render() {\n\n    // console.log('RENDER');\n\n    const {\n      onChange,\n      onBlur,\n      fieldApi,\n      ...rest\n    } = this.props;\n\n    const {\n      getValue,\n      setValue,\n      setTouched\n    } = fieldApi;\n\n    return (\n      <textarea\n        {...rest}\n        value={getValue() || ''}\n        onChange={( e ) => {\n          setValue(e.target.value);\n          if ( onChange ) {\n            onChange(e.target.value, e);\n          }\n        }}\n        onBlur={(e) => {\n          setTouched();\n          if ( onBlur ) {\n            onBlur(e);\n          }\n        }}\n      />\n    );\n\n  }\n}\n\nconst TextArea = FormField(TextAreaWrapper);\n\nexport default TextArea;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/TextArea.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nclass SelectWrapper extends Component {\n\n  render() {\n\n    // console.log('RENDER');\n\n    const {\n      fieldApi,\n      options,\n      onChange,\n      onBlur,\n      placeholder,\n      ...rest\n    } = this.props;\n\n    const {\n      getValue,\n      setValue,\n      setTouched\n    } = fieldApi;\n\n    const resolvedOptions = options.find(d => d.value === '') ? options : [\n      {\n        label: placeholder || 'Select One...',\n        value: '',\n        disabled: true\n      },\n      ...options\n    ];\n\n    const nullIndex = resolvedOptions.findIndex(d => d.value === '');\n    const selectedIndex = resolvedOptions.findIndex(d => d.value === getValue());\n\n    return (\n      <select\n        {...rest}\n        value={selectedIndex > -1 ? selectedIndex : nullIndex}\n        onChange={(e) => {\n          const val = resolvedOptions[e.target.value].value;\n          setValue(val);\n          if (onChange) {\n            onChange(val, e);\n          }\n        }}\n        onBlur={(e) => {\n          setTouched();\n          if ( onBlur ) {\n            onBlur(e);\n          }\n        }}\n      >\n        {resolvedOptions.map((option, i) => (\n          <option\n            key={option.value}\n            value={i}\n            disabled={option.disabled}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    );\n  }\n}\n\nconst Select = FormField(SelectWrapper);\n\nexport default Select;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/Select.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nclass CheckboxWrapper extends Component {\n\n  render() {\n\n    // console.log('RENDER');\n\n    const {\n      fieldApi,\n      onChange,\n      onBlur,\n      ...rest\n    } = this.props;\n\n    const {\n      getValue,\n      setValue,\n      setTouched\n    } = fieldApi;\n\n    return (\n      <input\n        {...rest}\n        checked={!!getValue()}\n        onChange={(e) => {\n          setValue(e.target.checked);\n          if (onChange) {\n            onChange(e.target.checked, e);\n          }\n        }}\n        onBlur={(e) => {\n          setTouched();\n          if ( onBlur ) {\n            onBlur(e);\n          }\n        }}\n        type=\"checkbox\"\n      />\n    );\n  }\n}\n\nconst Checkbox = FormField(CheckboxWrapper);\n\nexport default Checkbox;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/Checkbox.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React, { Component } from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nclass RadioGroupWrapper extends Component {\n\n  // Set the initial value\n  componentWillMount() {\n    if (this.props.value) {\n      this.props.fieldApi.setValue(this.props.value);\n    }\n  }\n\n  render() {\n\n    // console.log('RENDER');\n\n    const {\n      fieldApi,\n      children,\n      component,\n      render,\n      onChange,\n      onBlur\n    } = this.props;\n\n    fieldApi.onChange = ( val ) => {\n      if ( onChange ) {\n        onChange( val );\n      }\n    };\n\n    fieldApi.onBlur = () => {\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    // Expose field api as group\n    if ( component ) {\n      return React.createElement(component, { group: fieldApi } );\n    }\n\n    if ( render ) {\n      return render(fieldApi);\n    }\n\n    if ( typeof children === 'function' ) {\n      return children(fieldApi);\n    }\n\n    return React.cloneElement(children, { group: fieldApi } );\n  }\n}\n\nconst RadioGroup = FormField(RadioGroupWrapper);\n\nexport default RadioGroup;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/RadioGroup.js","/* ---------- Imports ---------- */\n\n// Import React\nimport React from 'react';\n\n// Inport the form input\nimport FormField from '../FormField';\n\nconst NestedFormWrapper = (props) => {\n\n  const {\n    children,\n    fieldApi\n  } = props;\n\n  const {\n    setValue,\n    setError,\n    setWarning,\n    setSuccess,\n    setTouched,\n    submitted,\n    submits,\n    validatingField,\n    doneValidatingField,\n    registerAsyncValidation,\n    reset\n  } = fieldApi;\n\n  return React.cloneElement(children, {\n    // We pass down the fact that the parent form was submitted to the nested form\n    submitted,\n    submits,\n    reset,\n    // Update is an internal method that is used to update the parent form\n    update: ({ values, errors, successes, warnings, touched, asyncValidations }) => {\n\n      const invalid = errors ? Object.keys(errors).some( k => errors[k]) : false;\n      const success = successes ? Object.keys(successes).some( k => successes[k]) : false;\n      const warning = warnings ? Object.keys(warnings).some( k => warnings[k]) : false;\n\n      setValue( values );\n      setTouched( touched );\n      setError( invalid ? errors : null );\n      setWarning( warning ? warnings : null );\n      setSuccess( success ? successes : null );\n      if ( asyncValidations > 0 ) {\n        validatingField();\n      }\n      else {\n        doneValidatingField();\n      }\n    },\n    registerAsyncValidation\n  });\n\n};\n\nconst NestedForm = FormField(NestedFormWrapper);\n\nexport default NestedForm;\n\n\n\n// WEBPACK FOOTER //\n// src/components/form-fields/NestedForm.js"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA;AACA;;;AAEA;AACA;;;AACA;AACA;;;AACA;AACA;;;;;AACA;AACA;AAbA;AACA;AACA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AACA;AAIA;AACA;AAQA;AACA;AAxCA;AAAA;AAAA;AACA;AA2CA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA7BA;AA+BA;AACA;AArFA;AAAA;AAAA;AACA;AAuFA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAjHA;AAmHA;;;;;;ACxHA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;ACjFA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACCA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AAIA;AACA;;;AAptBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAuBA;AACA;AAzBA;AA0BA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AA6BA;;;;;;;;;;;;;;;;;;;;;AC/IA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;;;AAEA;AACA;;;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AADA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAjBA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/BA;AACA;AACA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA0BA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;;;;;;;AAEA;AACA;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAhPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAgCA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;AA+LA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AAIA;AACA;AAAA;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AAIA;AAFA;AAZA;AAiBA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AAAA;AACA;AADA;AAIA;;;;;AAIA;;;;;;ACjbA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAwBA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AAEA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACthBA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;;;;;AA7BA;AACA;AACA;AA8BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;;;AAEA;AACA;;;AACA;AACA;;;;;AACA;AACA;AANA;AAOA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA7BA;AACA;AA+BA;AAEA;;;AArGA;AACA;AACA;AACA;AACA;AAqGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAqBA;;;;;AAtCA;AACA;AACA;AAwCA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAkBA;;;;;AAzCA;AACA;AACA;AA0CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAiBA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AAjBA;AA2BA;;;;;AAhEA;AACA;AACA;AAiEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;;;;;AAzCA;AACA;AACA;AA0CA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAnDA;AACA;AACA;AAoDA;AACA;AACA;;;;;;;;;;;;;;;;;AC1DA;AACA;;;AAEA;AACA;;;;;AAPA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxBA;AA2BA;AACA;AApDA;AACA;AACA;AAmDA;AACA;AACA;;;;A","sourceRoot":""}