/**
 * Find min value.
 * @function min
 * @param {...number} values - Values to compare.
 * @returns {number} - Min number.
 */

'use strict';

/** @lends min */

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function min() {
  var args = arguments;
  var result = undefined;
  for (var i = 0, len = args.length; i < len; i++) {
    var val = args[i];
    if (Array.isArray(val)) {
      val = min.apply(undefined, _toConsumableArray(val));
    }
    var hit = result === undefined || val < result;
    if (hit) {
      result = val;
    }
  }
  return result;
}

module.exports = min;
//# sourceMappingURL=data:application/json;base64,bnVsbA==