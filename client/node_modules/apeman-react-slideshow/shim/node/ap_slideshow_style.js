/**
 * Style for ApSlideshow.
 * @class ApSlideshowStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApSlideshowStyle */
var ApSlideshowStyle = _react2.default.createClass({
  displayName: 'ApSlideshowStyle',

  propTypes: {
    style: _react.PropTypes.object
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {}
    };
  },

  statics: {
    styleData: function styleData(config) {
      var paddingRate = -25;
      return {
        all: {
          '.ap-slideshow': {
            position: 'relative',
            display: 'block',
            overflow: 'hidden'
          },
          '.ap-slideshow-inner': {
            position: 'relative',
            display: 'block'
          },
          '.ap-slideshow .ap-slideshow-image': {
            position: 'absolute',
            display: 'inline-block',
            visibility: 'visible',
            left: paddingRate + '%',
            top: paddingRate + '%',
            right: paddingRate + '%',
            bottom: paddingRate + '%',
            boxSizing: 'border-box',
            opacity: 0,
            width: 100 - paddingRate * 2 + '%',
            height: 100 - paddingRate * 2 + '%'
          },
          '.ap-slideshow .ap-image-content': {
            position: 'static'
          },
          '.ap-slideshow .ap-slideshow-image-active': {
            visibility: 'visible',
            opacity: '1 !important',
            transform: 'translate(0, 0) scale(1, 1) skew(0, 0) !important'
          }
        }
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApSlideshowStyle$sty = ApSlideshowStyle.styleData(props);

    var all = _ApSlideshowStyle$sty.all;
    var small = _ApSlideshowStyle$sty.small;
    var medium = _ApSlideshowStyle$sty.medium;
    var large = _ApSlideshowStyle$sty.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: Object.assign(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApSlideshowStyle;
//# sourceMappingURL=data:application/json;base64,bnVsbA==